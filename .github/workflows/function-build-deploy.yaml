name: Serverless Function - Build/Publish
on:
  push:
  workflow_dispatch:

env:
  BUILD_CONFIGURATION: 'Release'
  ARTIFACT_NAME: ServerlessFunction.App.${{ github.run_number }}

permissions:
  id-token: write # requesting JWT in migration workflows for oidc auth with Azure

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/master' && github.run_id || github.ref }}
  cancel-in-progress: true

jobs:
  BuildPublish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install .NET Core 7 SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.203

    - name: Restore Projects
      run: dotnet restore src/ServerlessFileIndexer/ServerlessFileIndexer.csproj

    - name: Build
      run: dotnet build src/ServerlessFileIndexer/ServerlessFileIndexer.csproj --no-restore --configuration ${{ env.BUILD_CONFIGURATION }}

    - name: Publish App
      run: dotnet publish src/ServerlessFileIndexer/ServerlessFileIndexer.csproj --no-build --configuration ${{ env.BUILD_CONFIGURATION }} --output ${{ env.DOTNET_ROOT }}/app

    - uses: actions/upload-artifact@v3
      with:
        path: ${{ env.DOTNET_ROOT }}/app
        name: ${{ env.ARTIFACT_NAME }}
  
  Deploy:
    runs-on: ubuntu-latest
    needs: [BuildPublish]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v3
        with:
          name: ServerlessFunction.App.${{ github.run_number }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.SP_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: FunctionApp Deployment
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ vars.FUNCTION_APP_NAME }}
          package: .
          publish-profile: ${{ secrets.FUNCTION_APP_PUBLISH_PROFILE }}